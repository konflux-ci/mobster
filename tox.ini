[vars]
PACKAGE_MODULE = src/mobster
PACKAGE_TESTS = tests
PACKAGE_INTEGRATION_TESTS = tests/integration

[tox]
envlist =
    test,
    ruff,
    pylint,
    bandit,
    mypy,
    yamllint,
    pip-audit,
    hadolint,
skipsdist = True

[testenv]
deps =
    poetry
    poetry-plugin-export
commands_pre =
    poetry install
setenv =
    PYTHONPATH = {toxinidir}/src

[testenv:test]
commands = pytest -v \
       --ignore={[vars]PACKAGE_INTEGRATION_TESTS} \
       --cov {[vars]PACKAGE_MODULE} \
       --cov-report term-missing \
       --cov-fail-under 95 \
       --cov-report xml \
       --cov-report html \
       {[vars]PACKAGE_TESTS} \
       {posargs}

[testenv:test-integration]
commands = pytest -v \
       {[vars]PACKAGE_INTEGRATION_TESTS} \
       {posargs}

[testenv:ruff]
commands =
    ruff check .
    ruff format --check .

[testenv:ruff-fix]
commands =
    ruff check --fix .
    ruff format .

[testenv:pylint]
commands =
    pylint {[vars]PACKAGE_MODULE}

[testenv:mypy]
commands =
    mypy {[vars]PACKAGE_MODULE} {[vars]PACKAGE_TESTS}

[testenv:yamllint]
files =
    .
commands =
    yamllint {[testenv:yamllint]files}


[testenv:bandit]
groups = operatorcert-dev
commands = bandit -r {[vars]PACKAGE_MODULE} -ll

[testenv:pip-audit]
groups = operatorcert-dev
allowlist_externals = bash,python
commands = poetry export \
    --without-hashes \
    --format=requirements.txt -o /tmp/requirements.txt

    # run pip audit in a way it can't exit with non-zero status
    bash ./scripts/pip-audit.sh
    # pip-audit does not support not failing on unfixable vulnerabilities, this hacks around that
    python ./scripts/pip-audit-parse.py  /tmp/audit-output.json


[testenv:hadolint]
allowlist_externals = hadolint
groups = dev
commands =  hadolint --failure-threshold warning \
    --info DL3002 --info DL3041 \
    Containerfile
