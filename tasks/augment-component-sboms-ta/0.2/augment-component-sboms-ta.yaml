---
apiVersion: tekton.dev/v1
kind: Task

metadata:
  name: augment-component-sboms-ta
  labels:
    app.kubernetes.io/version: "0.2.0"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/tags: sbom

spec:
  description: >-
    Update component-level SBOMs with release-time information, optionally
    upload them to Atlas and S3.
  params:
    - name: ociStorage
      description: The OCI repository where the Trusted Artifacts are stored.
      type: string
      default: "empty"

    - name: ociArtifactExpiresAfter
      description: Expiration date for the trusted artifacts created in the
        OCI repository. An empty string means the artifacts do not expire.
      type: string
      default: "1d"

    - name: trustedArtifactsDebug
      description: Flag to enable debug logging in trusted artifacts. Set to a non-empty string to enable.
      type: string
      default: ""

    - name: orasOptions
      description: oras options to pass to Trusted Artifacts calls
      type: string
      default: ""

    - name: sourceDataArtifact
      type: string
      description: Location of trusted artifacts to be used to populate data directory
      default: ""

    - name: dataDir
      description: The location where data will be stored
      type: string
      default: /var/workdir/release

    - name: taskGitUrl
      type: string
      description: The url to the git repo where the trusted artifact stepactions to be used are stored

    - name: taskGitRevision
      type: string
      description: The revision in the taskGitUrl repo to be used for trusted artifact stepactions

    - name: snapshotSpec
      type: string
      description: Path to the mapped snapshot spec.

    - name: atlasSecretName
      type: string
      description: >
        The name of the K8s secret containing the 'sso_account' and 'sso_token'
        keys used for Atlas OIDC authentication.

    - name: retryAWSSecretName
      type: string
      description: >
        The name of the K8s secret containing the 'atlas-aws-access-key-id' and
        'atlas-aws-secret-access-key' keys used for AWS S3 access.

    - name: retryS3Bucket
      type: string
      default: ""
      description: >
        The name of the S3 bucket used to store data for the retry mechanism.

    - name: atlasApiUrl
      type: string
      default: ""
      description: URL of the Atlas API host.

    - name: ssoTokenUrl
      description: URL of the SSO token issuer.
      default: ""
      type: string

    - name: augmentConcurrency
      description: |
        Maximum number of SBOMs that will be augmented concurrently. Higher
        limit will speed up execution for larger snapshots, but will have
        higher memory requirements.
      default: "8"
      type: string

    - name: uploadConcurrency
      description: |
        Maximum number of SBOMs that will be uploaded to Atlas concurrently.
        Higher limit will speed up execution for larger snapshots, but will
        have higher memory requirements.
      default: "8"
      type: string

    - name: resultsDirPath
      type: string
      description: Path to directory in the dataDir to store JSON task results to.

    - name: cosignSecretName
      type: string
      description: K8s secret name with a cosign signing key used for SBOM attestation.

  results:
    - description: Produced trusted data artifact
      name: sourceDataArtifact
      type: string

  volumes:
    - name: workdir
      emptyDir: {}

  stepTemplate:
    volumeMounts:
      - mountPath: /var/workdir
        name: workdir
    env:
      - name: IMAGE_EXPIRES_AFTER
        value: $(params.ociArtifactExpiresAfter)
      - name: "ORAS_OPTIONS"
        value: "$(params.orasOptions)"
      - name: "DEBUG"
        value: "$(params.trustedArtifactsDebug)"

  steps:
    - name: use-trusted-artifact
      ref:
        resolver: "git"
        params:
          - name: url
            value: $(params.taskGitUrl)
          - name: revision
            value: $(params.taskGitRevision)
          - name: pathInRepo
            value: stepactions/use-trusted-artifact/use-trusted-artifact.yaml
      params:
        - name: workDir
          value: $(params.dataDir)
        - name: sourceDataArtifact
          value: $(params.sourceDataArtifact)

    - name: process-component-sboms
      image: quay.io/rh-ee-mszymutk/mobster-test@sha256:448442bcc7c17172dd2af918d772ca2780357def93e1255918a626e77ad3cbe2
      env:
        - name: MOBSTER_TPA_SSO_ACCOUNT
          valueFrom:
            secretKeyRef:
              name: $(params.atlasSecretName)
              key: sso_account
              optional: true
        - name: MOBSTER_TPA_SSO_TOKEN
          valueFrom:
            secretKeyRef:
              name: $(params.atlasSecretName)
              key: sso_token
              optional: true
        - name: MOBSTER_TPA_SSO_TOKEN_URL
          value: $(params.ssoTokenUrl)
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: $(params.retryAWSSecretName)
              key: atlas-aws-access-key-id
              optional: true
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: $(params.retryAWSSecretName)
              key: atlas-aws-secret-access-key
              optional: true
        - name: AWS_DEFAULT_REGION
          value: "us-east-1"
        - name: SIGN_KEY
          valueFrom:
            secretKeyRef:
              name: $(params.cosignSecretName)
              key: SIGN_KEY
        - name: VERIFY_KEY
          valueFrom:
            secretKeyRef:
              name: $(params.cosignSecretName)
              key: PUBLIC_KEY
        - name: COSIGN_AWS_DEFAULT_REGION
          valueFrom:
            secretKeyRef:
              name: $(params.cosignSecretName)
              key: AWS_DEFAULT_REGION
        - name: COSIGN_AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: $(params.cosignSecretName)
              key: AWS_ACCESS_KEY_ID
        - name: COSIGN_AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: $(params.cosignSecretName)
              key: AWS_SECRET_ACCESS_KEY
      computeResources:
        limits:
          memory: 1Gi
        requests:
          memory: 1Gi
          cpu: 350m
      script: |
        #!/usr/bin/env bash
        set -eux
        # This is a little fragile, ideally it would be just a param. It's here
        # for consistency with other tasks in release-service-catalog. The
        # script below will verify that the release_id has the correct format.
        release_id=$(dirname "$(params.snapshotSpec)")
        
        echo "$VERIFY_KEY" > /tmp/verify_key_file.pub
        echo "PUBLIC KEY: $VERIFY_KEY"

        process_component_sboms \
          --data-dir "$(params.dataDir)" \
          --snapshot-spec "$(params.snapshotSpec)" \
          --atlas-api-url "$(params.atlasApiUrl)" \
          --retry-s3-bucket "$(params.retryS3Bucket)" \
          --release-id "$release_id" \
          --augment-concurrency "$(params.augmentConcurrency)" \
          --upload-concurrency "$(params.uploadConcurrency)" \
          --result-dir "$(params.resultsDirPath)" \
          --sign-key "$SIGN_KEY" \
          --verify-key /tmp/verify_key_file.pub

    - name: create-trusted-artifact
      ref:
        resolver: "git"
        params:
          - name: url
            value: "$(params.taskGitUrl)"
          - name: revision
            value: "$(params.taskGitRevision)"
          - name: pathInRepo
            value: stepactions/create-trusted-artifact/create-trusted-artifact.yaml
      params:
        - name: ociStorage
          value: $(params.ociStorage)
        - name: workDir
          value: $(params.dataDir)
        - name: sourceDataArtifact
          value: $(results.sourceDataArtifact.path)
